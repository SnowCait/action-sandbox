name: GitHub Container registory

on:
  push:
    paths:
      - .github/workflows/ghcr.yml
      - ghcr/**/*
  workflow_dispatch:

jobs:
  build-texturepacker:
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    strategy:
      matrix:
        version: [ 5.5.0, 5.4.0 ]
    defaults:
      run:
        working-directory: ghcr/texturepacker/

    steps:
      - uses: snow-actions/sparse-checkout@v1.1.0
        with:
          patterns: |
            ghcr/texturepacker/
      - name: Download TexturePacker.deb
        run: |
          curl -o TexturePacker.deb \
            https://www.codeandweb.com/download/texturepacker/${VERSION}/TexturePacker-${VERSION}-ubuntu64.deb
        env:
          VERSION: ${{ matrix.version }}
      - name: Build
        run: docker build -t ghcr.io/${OWNER,,}/texturepacker:${VERSION} .
        env:
          OWNER: ${{ github.repository_owner }}
          VERSION: ${{ matrix.version }}
      - name: Login
        run: echo $CR_PAT | docker login ghcr.io -u snowcait --password-stdin
        env:
          CR_PAT: ${{ secrets.GITHUB_TOKEN }}
      - name: Push
        run: docker push ghcr.io/${OWNER,,}/texturepacker:${VERSION}
        env:
          OWNER: ${{ github.repository_owner }}
          VERSION: ${{ matrix.version }}

  use-texturepacker:
    runs-on: ubuntu-latest
    needs: [ build-texturepacker ]
    timeout-minutes: 5

    steps:
      - run: ls -la
#       - run: docker inspect ghcr.io/snowcait/texturepacker:5.5.0
      - run: docker pull ghcr.io/${OWNER,,}/texturepacker:${VERSION}
        env:
          OWNER: ${{ github.repository_owner }}
          VERSION: 5.5.0
      - run: docker images
      - run: docker run ghcr.io/${OWNER,,}/texturepacker:${VERSION} TexturePacker --version
        env:
          OWNER: ${{ github.repository_owner }}
          VERSION: 5.5.0
      - run: docker run ghcr.io/${OWNER,,}/texturepacker:${VERSION} TexturePacker --license-info
        env:
          OWNER: ${{ github.repository_owner }}
          VERSION: 5.5.0

  build-runner:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ghcr/github-runner/
        shell: bash

    steps:
      - uses: actions/checkout@v2
      - run: docker build -t ghcr.io/snowcait/github-runner:latest .
      - run: docker images
      - run: echo $CR_PAT | docker login ghcr.io -u snowcait --password-stdin
        env:
          CR_PAT: ${{ secrets.GITHUB_TOKEN }}
      - run: docker push ghcr.io/snowcait/github-runner:latest

  build-php:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ghcr/php/

    steps:
      - uses: actions/checkout@v2
      - run: docker build -t ghcr.io/snowcait/php-fpm:latest .
      - run: docker images
      - run: echo $CR_PAT | docker login ghcr.io -u snowcait --password-stdin
        env:
          CR_PAT: ${{ secrets.GITHUB_TOKEN }}
      - run: docker push ghcr.io/snowcait/php-fpm:latest
